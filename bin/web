#!/usr/bin/env node

const http = require("http");
const express = require("express");
const socketIO = require("socket.io");
const socketRedis = require("socket.io-redis");
const path = require("path");

const PORT = process.env.PORT || 5000;
const REDIS_URL = process.env.REDIS_URL;
const REDIS_KEY = process.env.REDIS_KEY || "chat-socket";

const app = express();
const server = http.createServer(app);
const io = socketIO(server);
const redisAdapter = socketRedis(REDIS_URL, { key: REDIS_KEY });

app.get("/", (req, res) =>
  res.sendFile(path.resolve(__dirname, "../index.html"))
);

io.adapter(redisAdapter).on("connection", (socket) => {
  let roomName;

  socket
    .on("join-room", (_roomName) => {
      roomName = _roomName;
      socket.join(_roomName);
    })
    .on("client-user-moved", ({ sid, x, y }) => {
      socket.broadcast.to(roomName).emit("client-user-moved", { sid, x, y });
    })
    .on("client-user-moved", ({ identity, active }) => {
      socket.broadcast
        .to(roomName)
        .emit("client-user-moved", { identity, active });
    })
    .on("client-chat-message", function ({ identity, message, timestamp }) {
      socket.broadcast.to(roomName).emit("client-chat-message", {
        identity,
        message,
        timestamp,
      });
    });
});

server.listen(PORT, () => console.log(`Listening on ${PORT}`));
